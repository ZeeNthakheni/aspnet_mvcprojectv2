@model MVCProjectv2.Models.Joke
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject UserManager<IdentityUser> UserManager


@{
    ViewData["Title"] = "Edit";
}

@if (@User.FindFirst(ClaimTypes.NameIdentifier).Value == Model.UserId)
{
    <h1>Edit</h1>

    <h4>Joke</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input class="form-control" type="hidden" name="UserId" value="@Model.UserId" />
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="JokeQuestion" class="control-label"></label>
                    <input asp-for="JokeQuestion" class="form-control" />
                    <span asp-validation-for="JokeQuestion" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="JokeAnswer" class="control-label"></label>
                    <input asp-for="JokeAnswer" class="form-control" />
                    <span asp-validation-for="JokeAnswer" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}
else
{
    <h1>You can't edit this joke as it doesn't belong to you!</h1>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
